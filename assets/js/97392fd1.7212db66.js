"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6722],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(o,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2598:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:2,title:"Reserved Names"},i=void 0,s={unversionedId:"reservedNames",id:"reservedNames",title:"Reserved Names",description:"DJSeed has a handful of reserved event names and environment variables names that",source:"@site/docs/reservedNames.mdx",sourceDirName:".",slug:"/reservedNames",permalink:"/djseed/docs/reservedNames",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Reserved Names"},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/djseed/docs/starting"},next:{title:"Sharding",permalink:"/djseed/docs/examples/sharding"}},o={},p=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Cluster Util Events",id:"cluster-util-events",level:2},{value:"Process IPC Payloads",id:"process-ipc-payloads",level:2},{value:"Reserved Payloads",id:"reserved-payloads",level:3}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"DJSeed has a handful of reserved event names and environment variables names that\ncannot be overridden or reused without potentially breaking functionality."),(0,r.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"These variables are utilized in the parent and worker threads to help communicate\nprimitive information. Assigning or overriding these variables will most likely cause breakage\nif you don't know what you are doing."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::Cluster_Util_Enabled")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::Total_Shard_Amount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::First_Shard_Identifier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::Last_Shard_Identifier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::Child_Cluster_Identifier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DJSeed::Total_Child_Cluster_Amount"))),(0,r.kt)("h2",{id:"cluster-util-events"},"Cluster Util Events"),(0,r.kt)("p",null,"These are events emitted on ",(0,r.kt)("a",{parentName:"p",href:"/docs/classes/clusterutil#events"},"ClusterUtil")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/classes/clustereventemitter"},"ClusterEventEmitter"),"\nemitting these events manually with incorrect data may cause breakage."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Util_Info")," ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/classes/clusterutil"},"ClusterUtil"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Util_Error")," ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/classes/clusterutil"},"ClusterUtil"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Ready")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Death")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Error")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Warn")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Ready")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Resume")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Reconnecting")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Disconnect")," ",(0,r.kt)("strong",{parentName:"li"},"Both")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Error")," ",(0,r.kt)("strong",{parentName:"li"},"Both"))),(0,r.kt)("h2",{id:"process-ipc-payloads"},"Process IPC Payloads"),(0,r.kt)("p",null,"Not to be confused with ",(0,r.kt)("a",{parentName:"p",href:"/docs/classes/ipc"},"IPC"),"... ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/process.html#processsendmessage-sendhandle-options-callback"},"Process IPC")," is utilized to\ncommunicate primitave messages to the worker threads as it is the easiest way to communicate between\nprocesses. These are the most detrimental to the entire package so it is advised to stay away from using these names!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example Process IPC Payload"',title:'"Example',Process:!0,IPC:!0,'Payload"':!0},"{\n  payload: 'event_name',\n  data: {\n    ...\n  }\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can still use process IPC but it is suggested to structure your messages\ndifferently so you don't need to worry about conflicting payloads.")),(0,r.kt)("h3",{id:"reserved-payloads"},"Reserved Payloads"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Shards_Prepared")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Stats_Response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Stats_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Broadcast_Eval_Response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Broadcast_Eval_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Error")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Warn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Ready")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Resume")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Reconnecting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Disconnect")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Shard_Error")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cluster_Ready")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Dispose_Self_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Dispose_Self")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IPC_Broadcast_Event")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IPC_Send_To_Event")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_All_Stats_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_All_Stats_Response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_Stats_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_Stats_Response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_Broadcast_Eval_Request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Util_Broadcast_Eval_Response"))))}m.isMDXComponent=!0}}]);